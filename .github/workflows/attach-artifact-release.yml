name: Attach Artifact to Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'LPM version to release'
        required: true

env:
  VERSION: ${{ inputs.version }}

jobs:
  attach-to-release:
    name: Attach Artifact to Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.22'

      - name: Setup GO environment
        run: |
          go mod download

      - name: Update VERSION file
        run: echo $VERSION > VERSION

      - name: Release Artifact
        run: make release

      - name: Get latest draft release ID
        id: get-release
        run: |
          LATEST_DRAFT_RELEASE=$(curl -X GET -H "Authorization: token ${{ secrets.BOT_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases?per_page=1" | jq -r 'if .[].draft == true then .[].id else empty end')
          LATEST_DRAFT_RELEASE_URL=$(curl -X GET -H "Authorization: token ${{ secrets.BOT_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases?per_page=1" | jq -r 'if .[].draft == true then .[].upload_url else empty end')
          echo "Latest Draft Release ID: $LATEST_DRAFT_RELEASE"
          echo "Latest Draft Release upload_url: $LATEST_DRAFT_RELEASE_URL"
          echo "RELEASE_UPLOAD_URL=$LATEST_DRAFT_RELEASE_URL" >> $GITHUB_ENV
  
      - name: List artifacts in release
        if: env.RELEASE_ID != '' && env.RELEASE_ID != null
        id: list-artifacts
        run: |
          RELEASE_ID="${{ env.RELEASE_ID }}"
          ARTIFACTS=$(curl -X GET -H "Authorization: token ${{ secrets.BOT_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets" | jq -r '.[].id')
          echo "Artifacts to delete: $ARTIFACTS"
          ARTIFACTS_CLEANED=$(echo "$ARTIFACTS" | tr -s '[:space:]' ',' | sed 's/,$//')
          echo "ARTIFACTS_TO_DELETE=$ARTIFACTS_CLEANED" >> $GITHUB_ENV

      - name: Delete artifacts
        if: env.ARTIFACTS_TO_DELETE != null
        run: |
          RELEASE_ID="${{ env.RELEASE_ID }}"
          ARTIFACTS_TO_DELETE="${{ env.ARTIFACTS_TO_DELETE }}"
          IFS=',' read -ra values <<< "$ARTIFACTS_TO_DELETE"
          for value in "${values[@]}"; do
            curl -X DELETE -H "Authorization: token ${{ secrets.BOT_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/assets/$value"
            echo "Deleted artifact ID: $value"
          done

      - name: Attach darwin_amd64 artifact to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: ./bin/darwin_amd64/lpm-${{ env.version }}-darwin.zip
          asset_name: lpm-${{ env.version }}-darwin.zip
          asset_content_type: application/zip
